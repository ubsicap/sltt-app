{
  "name": "sltt-app",
  "version": "207304.6.1",
  "description": "Installable SLTT app (Sign Language Translation Tool)",
  "main": "./out/main/index.js",
  "author": "sltt-bible.net",
  "homepage": "https://sltt-bible.net/",
  "repository": {
    "type": "git",
    "url": "https://github.com/ubsicap/sltt-app.git"
  },
  "scripts": {
    "format": "prettier --write .",
    "lint": "eslint . --ext .js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix",
    "typecheck:node": "tsc --noEmit -p tsconfig.node.json --composite false",
    "typecheck:node:watch": "tsc --noEmit -p tsconfig.node.json --composite false --watch",
    "typecheck:web": "tsc --noEmit -p tsconfig.web.json --composite false",
    "typecheck": "npm i && npm run typecheck:node && npm run typecheck:web",
    "typecheck:watch": "tsc -p tsconfig.json --watch",
    "start": "electron-vite preview",
    "test": "npm i && vitest",
    "dev": "npm i && electron-vite dev",
    "build": "npm i && npm run typecheck && electron-vite build",
    "postinstall": "electron-builder install-app-deps",
    "ls:version:source": "dir %SLTT_CLIENT_DIR%\\build\\assets\\index-*.js",
    "find:version:source": "findstr /S /M /C:\"version = \\\"2.73.3\\\"\" %SLTT_CLIENT_DIR%\\build\\assets\\index-*.js",
    "find:version:target": "findstr /S /M /C:\"version = \\\"2.73.3\\\"\" out\\client\\assets\\index-*.js",
    "find:auth0_client_id:target": "findstr /S /M /C:\"\\\"VITE_AUTH0_CLIENT_ID\\\": \\\"eTewsjcscudtGHteG3u86YEDwHUTRd6Z\\\"\" out\\client\\assets\\index-*.js",
    "find:auth0_client_id:source": "findstr /S /M /C:\"\\\"VITE_AUTH0_CLIENT_ID\\\": \\\"eTewsjcscudtGHteG3u86YEDwHUTRd6Z\\\"\" %SLTT_CLIENT_DIR%\\build\\assets\\index-*.js",
    "rmdir:build:client": "if exist \".\\out\\client\" rmdir /s /q \".\\out\\client\"",
    "copy:build:client": "npm run find:version:source && npm run find:auth0_client_id:source && npm run rmdir:build:client && xcopy \"%SLTT_CLIENT_DIR%\\build\" .\\out\\client\\ /s /e /y",
    "build:core": "npm i && npm run build",
    "build:win:core": "npm run find:version:target && npm run build:core",
    "build:win:norelease": "npm run build:win:core && electron-builder --win --config --publish never",
    "build:win:sign:norelease": "cross-env SIGN=true npm run build:win:norelease && npm run build:win:update:metadata",
    "build:win:release": "npm run build:win:core && cross-env GH_TOKEN=%GH_TOKEN% electron-builder --win --config --publish always",
    "build:win:sign:release": "cross-env SIGN=true GH_TOKEN=%GH_TOKEN% npm run build:win:release && npm run build:win:update:metadata && npm run build:win:release:metadata",
    "build:win:update:metadata": "cross-env LATEST_YAML_PATH=./dist/latest.yml node build/recomputeHash.js && echo 'Do NOT forget to upload updated `dist/latest.yml` to release (e.g. npm run build:win:release:metadata)'",
    "build:win:release:metadata": "cross-env LATEST_YAML_PATH=./dist/latest.yml node build/updateReleaseMetadata.js",
    
    "list:release": "gh release list -R ubsicap/sltt-app | grep -v 'Draft'",
    "show:release": "export versionTag=$(jq -r .version package.json); gh release view v${versionTag} --web -R ubsicap/sltt-app",

    "copy:mac:client": "rm -rf out/client; cp -R $SLTT_CLIENT_DIR/build out/client",
    "build:mac:norelease": "yarn copy:mac:client; electron-vite build && electron-builder --mac --config --publish never",
    "build:mac:ifNoWinRelease": "yarn copy:mac:client; electron-vite build && electron-builder --mac --config --publish always",
    "upload:mac:release": "export versionTag=$(jq -r .version package.json); gh release upload v${versionTag} dist/latest-mac.yml dist/sltt-app-${versionTag}-mac.zip dist/sltt-app-${versionTag}-mac.zip.blockmap dist/sltt-app-${versionTag}.dmg dist/sltt-app-${versionTag}.dmg.blockmap -R ubsicap/sltt-app",
    
    "build:linux": "electron-vite build && electron-builder --linux --config"
  },
  "build": {
    "appId": "net.sltt-bible.app",
    "productName": "sltt-app",
    "afterSign": "build/notarize.js",
    "artifactBuildCompleted": "build/win-sign.js",
    "mac": {
      "target": [
        {
          "target": "default",
          "arch": [
            "x64"
          ]
        }
      ]
    },
    "directories": {
      "output": "dist"
    },
    "nsis": {
      "oneClick": true,
      "deleteAppDataOnUninstall": true
    },
    "publish": {
      "provider": "github",
      "owner": "ubsicap",
      "repo": "sltt-app",
      "releaseType": "draft"
    }
  },
  "dependencies": {
    "@electron-toolkit/preload": "^1.0.3",
    "@electron-toolkit/utils": "^1.0.2",
    "axios": ">=1.8.2",
    "body-parser": "^1.20.3",
    "bottleneck": "^2.19.5",
    "check-disk-space": "^2.1.0",
    "cors": "^2.8.5",
    "diskusage": "^1.2.0",
    "electron-updater": "^5.3.0",
    "express": "^4.17.1",
    "ffmpeg-static": "^5.1.0",
    "fluent-ffmpeg": "^2.1.2",
    "formidable": "^1.2.2",
    "fs-extra": "^11.2.0",
    "lodash": "^4.17.21",
    "multer": "^1.4.5-lts.1",
    "node-wifi": "^2.0.16",
    "rollbar": "^2.26.4",
    "safe-stable-stringify": "^2.5.0"
  },
  "devDependencies": {
    "@electron-toolkit/tsconfig": "^1.0.1",
    "@electron/notarize": "^1.2.3",
    "@rollup/plugin-commonjs": "^28.0.3",
    "@types/lodash": "^4.17.7",
    "@types/node": "18.0.0",
    "@types/react": "18.0.30",
    "@types/react-dom": "18.0.11",
    "@typescript-eslint/eslint-plugin": "^5.57.0",
    "@typescript-eslint/parser": "^5.57.0",
    "@vitejs/plugin-react": "^3.1.0",
    "axios": ">=1.8.2",
    "cross-env": "^7.0.3",
    "electron": "^22.3.4",
    "electron-builder": "^25.1.8",
    "electron-vite": "^1.0.21",
    "eslint": "^8.36.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-react": "^7.32.2",
    "form-data": "^4.0.2",
    "prettier": "^2.8.7",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "typescript": "^4.9.5",
    "vite": "^4.2.1",
    "vitest": ">=2.1.9",
    "yaml": "^2.7.0"
  },
  "packageManager": "yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e"
}
